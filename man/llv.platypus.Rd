% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/llv.platypus.R
\name{llv.platypus}
\alias{llv.platypus}
\title{pseudocode:
    for (v in views)
      load v
    load labels}
\usage{
llv.platypus(view.list, fn.labs, llv.folds = 10, no.iterations = 100,
  majority.threshold.percent = 100, expanded.output = TRUE,
  updating = FALSE, ignore.label = "intermediate", parallel = FALSE,
  num.cores = 25, classcol.labs = 1, output.folder = NA)
}
\arguments{
\item{view.list}{List of view objects}

\item{fn.labs}{File containing outcome labels}

\item{k}{number of folds for label learning validation (similar to cross validation folds), eg. 5, default=10}

\item{i}{Maximal number of iterations for each platypus run, default=100}

\item{m}{Percent agreement required to learn a sample's class label, default=100}

\item{u}{Updating the accuracies of the single views in each iteration, default=FALSE}

\item{e}{Expanded output: returned result list contains a list of trained views after each iteration, default=FALSE}

\item{b}{Label class to ignore, if any. Defaults to 'intermediate'}

\item{o}{Name of the folder where output is stored.}

\item{p}{The number of cores to use. Enables parallelization.}
}
\value{
A list containing fold.accuracy, labelling.matrix,labelling.matrices.views
}
\description{
divide labelled data in folds
    for(f in folds):
      unlabelled.data <- fold f
      delete f from labels
      while( not converged on labels OR no changes anymore )
        for( v in views )
          train v on all sets but f
          try to predict fold f
        add newly found labels to training data
        calculate performance for added labels
      calculate overall performance for a fold
    average performance over folds
Label learning validation
}
\details{
Similar to cross-fold validation, label learning validation for platypus is used to help identify the number of iterations to run when training a platypus model, so that label learning is most effective.
}
\examples{
TODO show how to generate config.files and fn.labs
llv.platypus(config.files,fn.labs)
llv.platypus(view.list=view.list,fn.labs=fn.labs,no.iterations=5,majority.threshold.percent=75,output.folder='platypus_output')
}
\keyword{platypus}
